@using Aviator.Main.Services
@using System.Globalization
@using System.Timers
@inject AviatorRouterService Service

<button @onclick="Service.OutputService.Restart" class="btn btn-success">Restart Aviator</button>
<button @onclick="RestartAll" class="btn btn-success">Restart</button>
<div class="table-responsive">
    <table class="table align-middle">
        <thead>
        <tr>
            <th>Controls</th>
            <th>Decoder</th>
            <th>Endpoint</th>
            <th>Writing</th>
            <th>Connected</th>
            <th>Last Message</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var decoder in Service.OutputService.Outputs.Keys)
        {
            @foreach (var output in Service.OutputService.Outputs[decoder])
            {
                <tr>
                    <td>
                        @if (@output.Writing)
                        {
                            <button @onclick="output.Stop" class="btn btn-danger">Stop</button>
                        }
                        else
                        {
                            <button @onclick="output.Start" class="btn btn-success">Start</button>
                        }
                    </td>
                    <td>@decoder</td>
                    <td>@output.Endpoint</td>
                    <td>@output.Writing</td>
                    <td>@output.Connected</td>
                    <td>@output.LastMessage.ToString("R",CultureInfo.InvariantCulture)</td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>


@code {
    public Timer Timer;

    protected override void OnInitialized()
    {
        Timer = new Timer(TimeSpan.FromSeconds(10));
        Timer.Elapsed += (sender, args) => Callback(args);
        Timer.Start();
    }

    private void Callback(ElapsedEventArgs args)
    {
        InvokeAsync(StateHasChanged);
    }

    private void RestartAll()
    {
        Service.OutputService.Outputs.Values.SelectMany(s => s).ToList().ForEach(b => b.Restart());
    }

}